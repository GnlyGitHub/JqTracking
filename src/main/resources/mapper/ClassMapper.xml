<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxd.dao.IClassDao">

    <!--List<Class> getAllSClassBytId_Teacher(Integer tId);-->
    <select id="getAllSClassBytId_Teacher" resultType="Class">
        select classId,className,startDate,endDate,tid
        from class
        where tid=#{tid} order by classId desc
    </select>

    <!--List<Class> getAllClass_admin();-->
    <select id="getAllClass_admin" resultType="Class">
        select classId,className,startDate,endDate,tId
        from class
    </select>

    <select id="getAllClass_Manage" resultType="Class">
         select classId,className,startDate,endDate,tid
            from class
            order by classId desc
    </select>

    <!--List<Class> getAllClasses_admin(String className);-->
    <select id="getAllClasses_admin" resultType="Class">
        select c.classId classId,c.className className,c.startDate startDate,c.endDate endDate,c.tId tId,
        t.tName tName
        from class c,teacher t
        where t.tId=c.tId
        <if test="className != '' and className != null">
            and className like '%' #{className} '%'
        </if>
        order by c.classId desc
    </select>

    <!--List<Class> getClasses_admin(Integer pageSize, Integer pageIndex, String className);-->
    <select id="getClasses_admin" resultType="Class">
        select c.classId classId,c.className className,c.startDate startDate,c.endDate endDate,c.tId tId,
        t.tName tName
        from class c,teacher t
        where t.tId=c.tId
        <if test="className != '' and className != null">
            and className like '%' #{className} '%'
        </if>
        order by c.classId desc
        limit ${pageSize * (pageIndex - 1)}, ${pageSize}
    </select>

    <!--boolean addClass_admin(Class aClass);-->
    <insert id="addClass_admin">
        insert into class (className,startDate,endDate,tId)
        values (#{className},#{startDate},#{endDate},#{tId})
    </insert>

    <!--boolean delClass_admin(Integer classId);-->
    <delete id="delClass_admin">
        delete from class where classId=#{classId}
    </delete>

    <!--Class getClassById_admin(Integer classId);-->
    <select id="getClassById_admin" resultType="Class">
        select c.classId classId,c.className className,c.startDate startDate,c.endDate endDate,c.tId tId,
        t.tName tName
        from class c,teacher t
        where t.tId=c.tId and c.classId=#{classId}
    </select>

    <!--boolean editClassById_admin(Class aClass);-->
    <update id="editClassById_admin">
        update class set className=#{className},startDate=#{startDate},endDate=#{endDate},tId=#{tId}
        where classId=#{classId}
    </update>

    <!--Integer getCurClassId();-->
    <select id="getCurClassId" resultType="Integer">
        select max(classId) from class
    </select>
</mapper>